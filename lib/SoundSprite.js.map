{"version":3,"file":"SoundSprite.js","sources":["../src/SoundSprite.ts"],"sourcesContent":["import { IMediaInstance } from './interfaces';\r\nimport { CompleteCallback, Sound } from './Sound';\r\n\r\n/** Data for adding new sound sprites. */\r\ninterface SoundSpriteData\r\n{\r\n    /** The start time in seconds. */\r\n    start: number;\r\n    /** The end time in seconds. */\r\n    end: number;\r\n    /** The optional speed, if not speed, uses the default speed of the parent. */\r\n    speed?: number;\r\n}\r\n\r\n// Collection of sound sprites\r\ntype SoundSprites = Record<string, SoundSprite>;\r\n\r\n/**\r\n * Object that represents a single Sound's sprite. To add sound sprites\r\n * use the {@link Sound#addSprites} method.\r\n * @example\r\n * import { sound } from '@pixi/sound';\r\n * sound.add('alias', {\r\n *   url: 'path/to/file.ogg',\r\n *   sprites: {\r\n *     blast: { start: 0, end: 0.2 },\r\n *     boom: { start: 0.3, end: 0.5 },\r\n *   },\r\n *   loaded() {\r\n *     sound.play('alias', 'blast');\r\n *   }\r\n * );\r\n *\r\n */\r\nclass SoundSprite\r\n{\r\n    /**\r\n     * The reference sound\r\n     * @readonly\r\n     */\r\n    public parent: Sound;\r\n\r\n    /**\r\n     * The starting location in seconds.\r\n     * @readonly\r\n     */\r\n    public start: number;\r\n\r\n    /**\r\n     * The ending location in seconds\r\n     * @readonly\r\n     */\r\n    public end: number;\r\n\r\n    /**\r\n     * The speed override where 1 is 100% speed playback.\r\n     * @readonly\r\n     */\r\n    public speed: number;\r\n\r\n    /**\r\n     * The duration of the sound in seconds.\r\n     * @readonly\r\n     */\r\n    public duration: number;\r\n\r\n    /**\r\n     * Whether to loop the sound sprite.\r\n     * @readonly\r\n     */\r\n    public loop: boolean;\r\n\r\n    /**\r\n     * @param parent - The parent sound\r\n     * @param options - Data associated with object.\r\n     */\r\n    constructor(parent: Sound, options: SoundSpriteData)\r\n    {\r\n        this.parent = parent;\r\n        Object.assign(this, options);\r\n        this.duration = this.end - this.start;\r\n\r\n        // eslint-disable-next-line no-console\r\n        console.assert(this.duration > 0, 'End time must be after start time');\r\n    }\r\n\r\n    /**\r\n     * Play the sound sprite.\r\n     * @param {Function} [complete] - Function call when complete\r\n     * @return Sound instance being played.\r\n     */\r\n    public play(complete?: CompleteCallback): IMediaInstance | Promise<IMediaInstance>\r\n    {\r\n        return this.parent.play({\r\n            complete,\r\n            speed: this.speed || this.parent.speed,\r\n            end: this.end,\r\n            start: this.start,\r\n            loop: this.loop\r\n        });\r\n    }\r\n\r\n    /** Destroy and don't use after this */\r\n    public destroy(): void\r\n    {\r\n        this.parent = null;\r\n    }\r\n}\r\n\r\nexport type { SoundSpriteData, SoundSprites };\r\nexport { SoundSprite };\r\n"],"names":[],"mappings":";;AAkCA,MAAM,WACN,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAyCI,WAAA,CAAY,QAAe,OAC3B,EAAA;AACI,IAAA,IAAA,CAAK,MAAS,GAAA,MAAA,CAAA;AACd,IAAO,MAAA,CAAA,MAAA,CAAO,MAAM,OAAO,CAAA,CAAA;AAC3B,IAAK,IAAA,CAAA,QAAA,GAAW,IAAK,CAAA,GAAA,GAAM,IAAK,CAAA,KAAA,CAAA;AAGhC,IAAA,OAAA,CAAQ,MAAO,CAAA,IAAA,CAAK,QAAW,GAAA,CAAA,EAAG,mCAAmC,CAAA,CAAA;AAAA,GACzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOO,KAAK,QACZ,EAAA;AACI,IAAO,OAAA,IAAA,CAAK,OAAO,IAAK,CAAA;AAAA,MACpB,QAAA;AAAA,MACA,KAAO,EAAA,IAAA,CAAK,KAAS,IAAA,IAAA,CAAK,MAAO,CAAA,KAAA;AAAA,MACjC,KAAK,IAAK,CAAA,GAAA;AAAA,MACV,OAAO,IAAK,CAAA,KAAA;AAAA,MACZ,MAAM,IAAK,CAAA,IAAA;AAAA,KACd,CAAA,CAAA;AAAA,GACL;AAAA;AAAA,EAGO,OACP,GAAA;AACI,IAAA,IAAA,CAAK,MAAS,GAAA,IAAA,CAAA;AAAA,GAClB;AACJ;;;;"}