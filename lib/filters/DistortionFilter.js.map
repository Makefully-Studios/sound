{"version":3,"file":"DistortionFilter.js","sources":["../../src/filters/DistortionFilter.ts"],"sourcesContent":["import { getInstance } from '../instance';\r\nimport { Filter } from './Filter';\r\n\r\n/**\r\n * Filter for adding adding delaynode.\r\n *\r\n * @memberof filters\r\n */\r\nclass DistortionFilter extends Filter\r\n{\r\n    /** The Wave shape node use to distort */\r\n    private _distortion: WaveShaperNode;\r\n\r\n    /** The amount of distoration */\r\n    private _amount: number;\r\n\r\n    /** @param amount - The amount of distoration from 0 to 1. */\r\n    constructor(amount = 0)\r\n    {\r\n        let distortion: WaveShaperNode;\r\n\r\n        if (!getInstance().useLegacy)\r\n        {\r\n            const { audioContext } = getInstance().context;\r\n\r\n            distortion = audioContext.createWaveShaper();\r\n        }\r\n\r\n        super(distortion);\r\n\r\n        this._distortion = distortion;\r\n\r\n        this.amount = amount;\r\n    }\r\n\r\n    /** The amount of distortion to set. */\r\n    set amount(value: number)\r\n    {\r\n        this._amount = value;\r\n        if (getInstance().useLegacy)\r\n        {\r\n            return;\r\n        }\r\n        const scaledValue = value * 1000;\r\n        const samples = 44100;\r\n        const curve: Float32Array = new Float32Array(samples);\r\n        const deg: number = Math.PI / 180;\r\n\r\n        let i = 0;\r\n        let x: number;\r\n\r\n        for (; i < samples; ++i)\r\n        {\r\n            x = (i * 2 / samples) - 1;\r\n            curve[i] = (3 + scaledValue) * x * 20 * deg / (Math.PI + (scaledValue * Math.abs(x)));\r\n        }\r\n        this._distortion.curve = curve;\r\n        this._distortion.oversample = '4x';\r\n    }\r\n    get amount(): number\r\n    {\r\n        return this._amount;\r\n    }\r\n\r\n    public destroy(): void\r\n    {\r\n        this._distortion = null;\r\n        super.destroy();\r\n    }\r\n}\r\n\r\nexport { DistortionFilter };\r\n"],"names":["Filter","getInstance"],"mappings":";;;;;AAQA,MAAM,yBAAyBA,aAC/B,CAAA;AAAA;AAAA,EAQI,WAAA,CAAY,SAAS,CACrB,EAAA;AACI,IAAI,IAAA,UAAA,CAAA;AAEJ,IAAI,IAAA,CAACC,oBAAY,EAAA,CAAE,SACnB,EAAA;AACI,MAAA,MAAM,EAAE,YAAA,EAAiB,GAAAA,oBAAA,EAAc,CAAA,OAAA,CAAA;AAEvC,MAAA,UAAA,GAAa,aAAa,gBAAiB,EAAA,CAAA;AAAA,KAC/C;AAEA,IAAA,KAAA,CAAM,UAAU,CAAA,CAAA;AAEhB,IAAA,IAAA,CAAK,WAAc,GAAA,UAAA,CAAA;AAEnB,IAAA,IAAA,CAAK,MAAS,GAAA,MAAA,CAAA;AAAA,GAClB;AAAA;AAAA,EAGA,IAAI,OAAO,KACX,EAAA;AACI,IAAA,IAAA,CAAK,OAAU,GAAA,KAAA,CAAA;AACf,IAAI,IAAAA,oBAAA,GAAc,SAClB,EAAA;AACI,MAAA,OAAA;AAAA,KACJ;AACA,IAAA,MAAM,cAAc,KAAQ,GAAA,GAAA,CAAA;AAC5B,IAAA,MAAM,OAAU,GAAA,KAAA,CAAA;AAChB,IAAM,MAAA,KAAA,GAAsB,IAAI,YAAA,CAAa,OAAO,CAAA,CAAA;AACpD,IAAM,MAAA,GAAA,GAAc,KAAK,EAAK,GAAA,GAAA,CAAA;AAE9B,IAAA,IAAI,CAAI,GAAA,CAAA,CAAA;AACR,IAAI,IAAA,CAAA,CAAA;AAEJ,IAAO,OAAA,CAAA,GAAI,OAAS,EAAA,EAAE,CACtB,EAAA;AACI,MAAK,CAAA,GAAA,CAAA,GAAI,IAAI,OAAW,GAAA,CAAA,CAAA;AACxB,MAAA,KAAA,CAAM,CAAC,CAAA,GAAA,CAAK,CAAI,GAAA,WAAA,IAAe,CAAI,GAAA,EAAA,GAAK,GAAO,IAAA,IAAA,CAAK,EAAM,GAAA,WAAA,GAAc,IAAK,CAAA,GAAA,CAAI,CAAC,CAAA,CAAA,CAAA;AAAA,KACtF;AACA,IAAA,IAAA,CAAK,YAAY,KAAQ,GAAA,KAAA,CAAA;AACzB,IAAA,IAAA,CAAK,YAAY,UAAa,GAAA,IAAA,CAAA;AAAA,GAClC;AAAA,EACA,IAAI,MACJ,GAAA;AACI,IAAA,OAAO,IAAK,CAAA,OAAA,CAAA;AAAA,GAChB;AAAA,EAEO,OACP,GAAA;AACI,IAAA,IAAA,CAAK,WAAc,GAAA,IAAA,CAAA;AACnB,IAAA,KAAA,CAAM,OAAQ,EAAA,CAAA;AAAA,GAClB;AACJ;;;;"}