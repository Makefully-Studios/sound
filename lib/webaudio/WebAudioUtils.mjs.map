{"version":3,"file":"WebAudioUtils.mjs","sources":["../../src/webaudio/WebAudioUtils.ts"],"sourcesContent":["import { getInstance } from '../instance';\r\nimport { WebAudioContext } from './WebAudioContext';\r\n\r\n/**\r\n * Internal class for Web Audio abstractions and convenience methods.\r\n * @memberof webaudio\r\n */\r\nclass WebAudioUtils\r\n{\r\n    /**\r\n     * Dezippering is removed in the future Web Audio API, instead\r\n     * we use the `setValueAtTime` method, however, this is not available\r\n     * in all environments (e.g., Android webview), so we fallback to the `value` setter.\r\n     * @param param - AudioNode parameter object\r\n     * @param value - Value to set\r\n     * @return The value set\r\n     */\r\n    public static setParamValue(param: AudioParam, value: number): number\r\n    {\r\n        if (param.setValueAtTime)\r\n        {\r\n            const context = getInstance().context as WebAudioContext;\r\n\r\n            param.setValueAtTime(value, context.audioContext.currentTime);\r\n        }\r\n        else\r\n        {\r\n            param.value = value;\r\n        }\r\n\r\n        return value;\r\n    }\r\n}\r\n\r\nexport { WebAudioUtils };\r\n"],"names":[],"mappings":";;AAOA,MAAM,aACN,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASI,OAAc,aAAc,CAAA,KAAA,EAAmB,KAC/C,EAAA;AACI,IAAA,IAAI,MAAM,cACV,EAAA;AACI,MAAM,MAAA,OAAA,GAAU,aAAc,CAAA,OAAA,CAAA;AAE9B,MAAA,KAAA,CAAM,cAAe,CAAA,KAAA,EAAO,OAAQ,CAAA,YAAA,CAAa,WAAW,CAAA,CAAA;AAAA,KAGhE,MAAA;AACI,MAAA,KAAA,CAAM,KAAQ,GAAA,KAAA,CAAA;AAAA,KAClB;AAEA,IAAO,OAAA,KAAA,CAAA;AAAA,GACX;AACJ;;;;"}