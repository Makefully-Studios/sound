{"version":3,"file":"WebAudioNodes.js","sources":["../../src/webaudio/WebAudioNodes.ts"],"sourcesContent":["import { Filterable } from '../Filterable';\r\nimport { WebAudioContext } from './WebAudioContext';\r\nimport { WebAudioUtils } from './WebAudioUtils';\r\n\r\n/** Output for cloning source node. */\r\ninterface SourceClone\r\n{\r\n    /** Cloned audio buffer source */\r\n    source: AudioBufferSourceNode;\r\n    /** Independent volume control */\r\n    gain: GainNode;\r\n}\r\n\r\n/**\r\n * @memberof webaudio\r\n */\r\nclass WebAudioNodes extends Filterable\r\n{\r\n    /**\r\n     * The buffer size for script processor, default is `0` which auto-detects. If you plan to use\r\n     * script node on iOS, you'll need to provide a non-zero amount.\r\n     * @default 0\r\n     */\r\n    public static BUFFER_SIZE = 0;\r\n\r\n    /**\r\n     * Get the buffer source node\r\n     * @readonly\r\n     */\r\n    public bufferSource: AudioBufferSourceNode;\r\n\r\n    /**\r\n     * Get the gain node\r\n     * @readonly\r\n     */\r\n    public gain: GainNode;\r\n\r\n    /**\r\n     * Get the analyser node\r\n     * @readonly\r\n     */\r\n    public analyser: AnalyserNode;\r\n\r\n    /**\r\n     * Reference to the SoundContext\r\n     * @readonly\r\n     */\r\n    public context: WebAudioContext;\r\n\r\n    /** Private reference to the script processor node. */\r\n    private _script: ScriptProcessorNode;\r\n\r\n    /**\r\n     * @param context - The audio context.\r\n     */\r\n    constructor(context: WebAudioContext)\r\n    {\r\n        const audioContext: AudioContext = context.audioContext;\r\n\r\n        const bufferSource: AudioBufferSourceNode = audioContext.createBufferSource();\r\n        const gain: GainNode = audioContext.createGain();\r\n        const analyser: AnalyserNode = audioContext.createAnalyser();\r\n\r\n        bufferSource.connect(analyser);\r\n        analyser.connect(gain);\r\n        gain.connect(context.destination);\r\n\r\n        super(analyser, gain);\r\n\r\n        this.context = context;\r\n        this.bufferSource = bufferSource;\r\n        this.gain = gain;\r\n        this.analyser = analyser;\r\n    }\r\n\r\n    /**\r\n     * Get the script processor node.\r\n     * @readonly\r\n     */\r\n    public get script(): ScriptProcessorNode\r\n    {\r\n        if (!this._script)\r\n        {\r\n            this._script = this.context.audioContext.createScriptProcessor(WebAudioNodes.BUFFER_SIZE);\r\n            this._script.connect(this.context.destination);\r\n        }\r\n\r\n        return this._script;\r\n    }\r\n\r\n    /** Cleans up. */\r\n    public destroy(): void\r\n    {\r\n        super.destroy();\r\n\r\n        this.bufferSource.disconnect();\r\n        if (this._script)\r\n        {\r\n            this._script.disconnect();\r\n        }\r\n        this.gain.disconnect();\r\n        this.analyser.disconnect();\r\n\r\n        this.bufferSource = null;\r\n        this._script = null;\r\n        this.gain = null;\r\n        this.analyser = null;\r\n\r\n        this.context = null;\r\n    }\r\n\r\n    /**\r\n     * Clones the bufferSource. Used just before playing a sound.\r\n     * @returns {SourceClone} The clone AudioBufferSourceNode.\r\n     */\r\n    public cloneBufferSource(): SourceClone\r\n    {\r\n        const orig: AudioBufferSourceNode = this.bufferSource;\r\n        const source: AudioBufferSourceNode = this.context.audioContext.createBufferSource();\r\n\r\n        source.buffer = orig.buffer;\r\n        WebAudioUtils.setParamValue(source.playbackRate, orig.playbackRate.value);\r\n        source.loop = orig.loop;\r\n\r\n        const gain: GainNode = this.context.audioContext.createGain();\r\n\r\n        source.connect(gain);\r\n        gain.connect(this.destination);\r\n\r\n        return { source, gain };\r\n    }\r\n\r\n    /**\r\n     * Get buffer size of `ScriptProcessorNode`.\r\n     * @readonly\r\n     */\r\n    get bufferSize(): number\r\n    {\r\n        return this.script.bufferSize;\r\n    }\r\n}\r\n\r\nexport type { SourceClone };\r\nexport { WebAudioNodes };\r\n"],"names":["Filterable","WebAudioUtils"],"mappings":";;;;;AAgBA,MAAM,cAAA,GAAN,cAA4BA,qBAC5B,CAAA;AAAA;AAAA;AAAA;AAAA,EAsCI,YAAY,OACZ,EAAA;AACI,IAAA,MAAM,eAA6B,OAAQ,CAAA,YAAA,CAAA;AAE3C,IAAM,MAAA,YAAA,GAAsC,aAAa,kBAAmB,EAAA,CAAA;AAC5E,IAAM,MAAA,IAAA,GAAiB,aAAa,UAAW,EAAA,CAAA;AAC/C,IAAM,MAAA,QAAA,GAAyB,aAAa,cAAe,EAAA,CAAA;AAE3D,IAAA,YAAA,CAAa,QAAQ,QAAQ,CAAA,CAAA;AAC7B,IAAA,QAAA,CAAS,QAAQ,IAAI,CAAA,CAAA;AACrB,IAAK,IAAA,CAAA,OAAA,CAAQ,QAAQ,WAAW,CAAA,CAAA;AAEhC,IAAA,KAAA,CAAM,UAAU,IAAI,CAAA,CAAA;AAEpB,IAAA,IAAA,CAAK,OAAU,GAAA,OAAA,CAAA;AACf,IAAA,IAAA,CAAK,YAAe,GAAA,YAAA,CAAA;AACpB,IAAA,IAAA,CAAK,IAAO,GAAA,IAAA,CAAA;AACZ,IAAA,IAAA,CAAK,QAAW,GAAA,QAAA,CAAA;AAAA,GACpB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAW,MACX,GAAA;AACI,IAAI,IAAA,CAAC,KAAK,OACV,EAAA;AACI,MAAA,IAAA,CAAK,UAAU,IAAK,CAAA,OAAA,CAAQ,YAAa,CAAA,qBAAA,CAAsB,eAAc,WAAW,CAAA,CAAA;AACxF,MAAA,IAAA,CAAK,OAAQ,CAAA,OAAA,CAAQ,IAAK,CAAA,OAAA,CAAQ,WAAW,CAAA,CAAA;AAAA,KACjD;AAEA,IAAA,OAAO,IAAK,CAAA,OAAA,CAAA;AAAA,GAChB;AAAA;AAAA,EAGO,OACP,GAAA;AACI,IAAA,KAAA,CAAM,OAAQ,EAAA,CAAA;AAEd,IAAA,IAAA,CAAK,aAAa,UAAW,EAAA,CAAA;AAC7B,IAAA,IAAI,KAAK,OACT,EAAA;AACI,MAAA,IAAA,CAAK,QAAQ,UAAW,EAAA,CAAA;AAAA,KAC5B;AACA,IAAA,IAAA,CAAK,KAAK,UAAW,EAAA,CAAA;AACrB,IAAA,IAAA,CAAK,SAAS,UAAW,EAAA,CAAA;AAEzB,IAAA,IAAA,CAAK,YAAe,GAAA,IAAA,CAAA;AACpB,IAAA,IAAA,CAAK,OAAU,GAAA,IAAA,CAAA;AACf,IAAA,IAAA,CAAK,IAAO,GAAA,IAAA,CAAA;AACZ,IAAA,IAAA,CAAK,QAAW,GAAA,IAAA,CAAA;AAEhB,IAAA,IAAA,CAAK,OAAU,GAAA,IAAA,CAAA;AAAA,GACnB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMO,iBACP,GAAA;AACI,IAAA,MAAM,OAA8B,IAAK,CAAA,YAAA,CAAA;AACzC,IAAA,MAAM,MAAgC,GAAA,IAAA,CAAK,OAAQ,CAAA,YAAA,CAAa,kBAAmB,EAAA,CAAA;AAEnF,IAAA,MAAA,CAAO,SAAS,IAAK,CAAA,MAAA,CAAA;AACrB,IAAAC,2BAAA,CAAc,aAAc,CAAA,MAAA,CAAO,YAAc,EAAA,IAAA,CAAK,aAAa,KAAK,CAAA,CAAA;AACxE,IAAA,MAAA,CAAO,OAAO,IAAK,CAAA,IAAA,CAAA;AAEnB,IAAA,MAAM,IAAiB,GAAA,IAAA,CAAK,OAAQ,CAAA,YAAA,CAAa,UAAW,EAAA,CAAA;AAE5D,IAAA,MAAA,CAAO,QAAQ,IAAI,CAAA,CAAA;AACnB,IAAK,IAAA,CAAA,OAAA,CAAQ,KAAK,WAAW,CAAA,CAAA;AAE7B,IAAO,OAAA,EAAE,QAAQ,IAAK,EAAA,CAAA;AAAA,GAC1B;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,UACJ,GAAA;AACI,IAAA,OAAO,KAAK,MAAO,CAAA,UAAA,CAAA;AAAA,GACvB;AACJ,CAAA,CAAA;AA5HA,IAAM,aAAN,GAAA,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAM,aAAA,CAOY,WAAc,GAAA,CAAA;;;;"}